{# templates/main/word_found.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Word Found{% endblock %}

{% block body %}
    <div class="word-display">
        <h1 class="display-word">{{ word }}</h1>
        <p class="congrats-message">Félicitations ! Vous avez trouvé un mot !</p>
        <canvas id="confetti-canvas"></canvas>
    </div>

    <style>
        .word-display {
            text-align: center;
            margin-top: 50px;
            position: relative;
        }

        .display-word {
            font-size: 80px;
            color: red;
            margin: 20px 0;
        }

        .congrats-message {
            font-size: 24px;
            font-weight: bold;
        }

        #confetti-canvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }
    </style>

    <script>
        // Script pour les confettis
        window.addEventListener('load', function () {
            const confetti = {
                maxCount: 150, // Maximum number of confetti
                speed: 2, // Confetti falling speed
                frameInterval: 15, // Frame interval for animation
            };

            let particles = [];

            const canvas = document.getElementById('confetti-canvas');
            const context = canvas.getContext('2d');

            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;

            function ConfettiParticle() {
                this.x = Math.random() * canvas.width;
                this.y = Math.random() * canvas.height - canvas.height;
                this.size = Math.random() * 10 + 5;
                this.speedX = Math.random() * 2 - 1;
                this.speedY = Math.random() * 5 + 2;
                this.color = `hsl(${Math.random() * 360}, 100%, 50%)`;
            }

            ConfettiParticle.prototype.update = function () {
                this.x += this.speedX;
                this.y += this.speedY;

                if (this.y >= canvas.height) {
                    this.y = canvas.height;
                    this.speedY *= -0.5;
                }
            };

            ConfettiParticle.prototype.draw = function () {
                context.fillStyle = this.color;
                context.fillRect(this.x, this.y, this.size, this.size);
            };

            function createParticles() {
                for (let i = 0; i < confetti.maxCount; i++) {
                    particles.push(new ConfettiParticle());
                }
            }

            function animateParticles() {
                context.clearRect(0, 0, canvas.width, canvas.height);
                particles.forEach((particle) => {
                    particle.update();
                    particle.draw();
                });
                requestAnimationFrame(animateParticles);
            }

            createParticles();
            animateParticles();
        });
    </script>
{% endblock %}
